package com.neemShade.TmTracker.pojo;
// default package
// Generated 20 Feb, 2017 8:03:33 PM by Hibernate Tools 5.2.0.Beta1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * ProjectUser generated by hbm2java
 */
@Entity
@Table(name = "tm_project_user", catalog = "tm")
//@JsonIdentityInfo(
//		  generator = ObjectIdGenerators.PropertyGenerator.class, 
//		  property = "projectUserId")
public class ProjectUser implements java.io.Serializable {

	private Long projectUserId;
	private ProjectType projectType;
	private User user;
	private Integer projectLevel;
	private Date projectGivenDate;
	private Boolean isRepeat;
	private String projectTheme;
	private String projectTitle;
	private String comments;

	public ProjectUser() {
	}

	public ProjectUser(ProjectType projectType, User user) {
		this.projectType = projectType;
		this.user = user;
	}

	public ProjectUser(ProjectType projectType, User user,
			Integer projectLevel, Date projectGivenDate, Boolean isRepeat,
			String projectTheme, String projectTitle, String comments) {
		this.projectType = projectType;
		this.user = user;
		this.projectLevel = projectLevel;
		this.projectGivenDate = projectGivenDate;
		this.isRepeat = isRepeat;
		this.projectTheme = projectTheme;
		this.projectTitle = projectTitle;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "project_user_id", unique = true, nullable = false)
	public Long getProjectUserId() {
		return this.projectUserId;
	}

	public void setProjectUserId(Long projectUserId) {
		this.projectUserId = projectUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_type_id", nullable = false)
//	@JsonManagedReference(value="projectUser-projectType")
	public ProjectType getProjectType() {
		return this.projectType;
	}

	public void setProjectType(ProjectType projectType) {
		this.projectType = projectType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
//	@JsonManagedReference(value="projectUser-user")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "project_level")
	public Integer getProjectLevel() {
		return this.projectLevel;
	}

	public void setProjectLevel(Integer projectLevel) {
		this.projectLevel = projectLevel;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "project_given_date", length = 10)
	public Date getProjectGivenDate() {
		return this.projectGivenDate;
	}

	public void setProjectGivenDate(Date projectGivenDate) {
		this.projectGivenDate = projectGivenDate;
	}

	@Column(name = "is_repeat")
	public Boolean getIsRepeat() {
		return this.isRepeat;
	}

	public void setIsRepeat(Boolean isRepeat) {
		this.isRepeat = isRepeat;
	}

	@Column(name = "project_theme", length = 100)
	public String getProjectTheme() {
		return this.projectTheme;
	}

	public void setProjectTheme(String projectTheme) {
		this.projectTheme = projectTheme;
	}

	@Column(name = "project_title", length = 200)
	public String getProjectTitle() {
		return this.projectTitle;
	}

	public void setProjectTitle(String projectTitle) {
		this.projectTitle = projectTitle;
	}

	@Column(name = "comments", length = 2000)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

}
